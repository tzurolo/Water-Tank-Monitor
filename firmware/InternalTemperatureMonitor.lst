   1               		.file	"InternalTemperatureMonitor.c"
   2               	__SREG__ = 0x3f
   3               	__SP_H__ = 0x3e
   4               	__SP_L__ = 0x3d
   5               	__CCP__  = 0x34
   6               	__tmp_reg__ = 0
   7               	__zero_reg__ = 1
   9               		.text
  10               	.Ltext0:
 108               	.global	InternalTemperatureMonitor_task
 110               	InternalTemperatureMonitor_task:
   1:../InternalTemperatureMonitor.c **** //
   2:../InternalTemperatureMonitor.c **** //  Battery Monitor
   3:../InternalTemperatureMonitor.c **** //
   4:../InternalTemperatureMonitor.c **** //  Reads the AtMega328P's internal temperature sensor
   5:../InternalTemperatureMonitor.c **** //
   6:../InternalTemperatureMonitor.c **** 
   7:../InternalTemperatureMonitor.c **** #include "InternalTemperatureMonitor.h"
   8:../InternalTemperatureMonitor.c **** 
   9:../InternalTemperatureMonitor.c **** #include "ADCManager.h"
  10:../InternalTemperatureMonitor.c **** #include "SystemTime.h"
  11:../InternalTemperatureMonitor.c **** #include "DataHistory.h"
  12:../InternalTemperatureMonitor.c **** 
  13:../InternalTemperatureMonitor.c **** #define SENSOR_ADC_CHANNEL ADC_SINGLE_ENDED_INPUT_TEMP
  14:../InternalTemperatureMonitor.c **** 
  15:../InternalTemperatureMonitor.c **** #define REFERENCE_VOLTAGE 1.1
  16:../InternalTemperatureMonitor.c **** 
  17:../InternalTemperatureMonitor.c **** // at 22 deg C we got 349 counts from the AtMega328P
  18:../InternalTemperatureMonitor.c **** #define ESTIMATED_ZERO_C_COUNTS 327
  19:../InternalTemperatureMonitor.c **** 
  20:../InternalTemperatureMonitor.c **** #define RESOLUTION 1000
  21:../InternalTemperatureMonitor.c **** #define NUMERATOR ((1 / 0.94) * (1100 / 1024) * RESOLUTION)
  22:../InternalTemperatureMonitor.c **** 
  23:../InternalTemperatureMonitor.c **** #define SENSOR_SAMPLES 10
  24:../InternalTemperatureMonitor.c **** // sample 10 times per second (10 1/100ths)
  25:../InternalTemperatureMonitor.c **** #define SENSOR_SAMPLE_TIME 10
  26:../InternalTemperatureMonitor.c **** 
  27:../InternalTemperatureMonitor.c **** typedef enum {
  28:../InternalTemperatureMonitor.c ****     tms_idle,
  29:../InternalTemperatureMonitor.c ****     tms_waitingForADCStart,
  30:../InternalTemperatureMonitor.c ****     tms_waitingForADCCompletion
  31:../InternalTemperatureMonitor.c **** } TemperatureMonitor_state;
  32:../InternalTemperatureMonitor.c **** 
  33:../InternalTemperatureMonitor.c **** static TemperatureMonitor_state tmState = tms_idle;
  34:../InternalTemperatureMonitor.c **** static SystemTime_t sampleTimer;
  35:../InternalTemperatureMonitor.c **** DataHistory_define(SENSOR_SAMPLES, temperatureHistory);
  36:../InternalTemperatureMonitor.c **** 
  37:../InternalTemperatureMonitor.c **** void InternalTemperatureMonitor_Initialize (void)
  38:../InternalTemperatureMonitor.c **** {
  39:../InternalTemperatureMonitor.c ****     tmState = tms_idle;
  40:../InternalTemperatureMonitor.c ****     // start sampling in 1/50 second (20ms, to let power stabilize)
  41:../InternalTemperatureMonitor.c ****     SystemTime_futureTime(2, &sampleTimer);
  42:../InternalTemperatureMonitor.c ****     DataHistory_clear(&temperatureHistory);
  43:../InternalTemperatureMonitor.c **** 
  44:../InternalTemperatureMonitor.c ****     // set up the ADC channel for measuring battery voltage
  45:../InternalTemperatureMonitor.c ****     ADCManager_setupChannel(SENSOR_ADC_CHANNEL, ADC_VOLTAGE_REF_INTERNAL_1V1, false);
  46:../InternalTemperatureMonitor.c **** }
  47:../InternalTemperatureMonitor.c **** 
  48:../InternalTemperatureMonitor.c **** int16_t InternalTemperatureMonitor_currentTemperature (void)
  49:../InternalTemperatureMonitor.c **** {
  50:../InternalTemperatureMonitor.c ****     uint16_t avgTemperature = 0;
  51:../InternalTemperatureMonitor.c ****     if (DataHistory_length(&temperatureHistory) >= SENSOR_SAMPLES) {
  52:../InternalTemperatureMonitor.c ****         uint16_t minTemmp;
  53:../InternalTemperatureMonitor.c ****         uint16_t maxTemp;
  54:../InternalTemperatureMonitor.c ****         DataHistory_getStatistics(
  55:../InternalTemperatureMonitor.c ****             &temperatureHistory, SENSOR_SAMPLES,
  56:../InternalTemperatureMonitor.c ****             &minTemmp, &maxTemp, &avgTemperature);
  57:../InternalTemperatureMonitor.c ****     }
  58:../InternalTemperatureMonitor.c **** 
  59:../InternalTemperatureMonitor.c ****     int32_t temp = avgTemperature;
  60:../InternalTemperatureMonitor.c ****     // counts to degrees C
  61:../InternalTemperatureMonitor.c ****     return ((int16_t)(((temp - ESTIMATED_ZERO_C_COUNTS) * NUMERATOR) / RESOLUTION));
  62:../InternalTemperatureMonitor.c **** }
  63:../InternalTemperatureMonitor.c **** 
  64:../InternalTemperatureMonitor.c **** void InternalTemperatureMonitor_task (void)
  65:../InternalTemperatureMonitor.c **** {
 111               	LM0-.LFBB1
 112               	.LM0:
 113               	.LFBB1:
 114 0000 DF93      		push r29
 115 0002 CF93      		push r28
 116 0004 00D0      		rcall .
 117 0006 CDB7      		in r28,__SP_L__
 118 0008 DEB7      		in r29,__SP_H__
 119               	/* prologue: function */
 120               	/* frame size = 2 */
  66:../InternalTemperatureMonitor.c ****     switch (tmState) {
 121               	,0,66,.LM1-.LFBB1
 122               	.LM1:
 123 000a 8091 0000 		lds r24,tmState
 124 000e 8130      		cpi r24,lo8(1)
 125 0010 01F0      		breq .L4
 126 0012 8130      		cpi r24,lo8(1)
 127 0014 00F0      		brlo .L3
 128 0016 8230      		cpi r24,lo8(2)
 129 0018 01F0      		breq .L8
 130               	.L6:
 131               	/* epilogue start */
  67:../InternalTemperatureMonitor.c ****         case tms_idle :
  68:../InternalTemperatureMonitor.c ****             if (SystemTime_timeHasArrived(&sampleTimer)) {
  69:../InternalTemperatureMonitor.c ****                 SystemTime_futureTime(SENSOR_SAMPLE_TIME, &sampleTimer);
  70:../InternalTemperatureMonitor.c ****                 tmState = tms_waitingForADCStart;
  71:../InternalTemperatureMonitor.c ****             }
  72:../InternalTemperatureMonitor.c ****             break;
  73:../InternalTemperatureMonitor.c ****         case tms_waitingForADCStart :
  74:../InternalTemperatureMonitor.c ****             if (ADCManager_StartConversion(SENSOR_ADC_CHANNEL)) {
  75:../InternalTemperatureMonitor.c ****                 // successfully started conversion
  76:../InternalTemperatureMonitor.c ****                 tmState = tms_waitingForADCCompletion;
  77:../InternalTemperatureMonitor.c ****             }
  78:../InternalTemperatureMonitor.c ****             break;    
  79:../InternalTemperatureMonitor.c ****         case tms_waitingForADCCompletion : {
  80:../InternalTemperatureMonitor.c ****             uint16_t batteryVoltage;
  81:../InternalTemperatureMonitor.c ****             if (ADCManager_ConversionIsComplete(&batteryVoltage)) {
  82:../InternalTemperatureMonitor.c ****                 DataHistory_insertValue(batteryVoltage, &temperatureHistory);
  83:../InternalTemperatureMonitor.c **** 
  84:../InternalTemperatureMonitor.c ****                 tmState = tms_idle;
  85:../InternalTemperatureMonitor.c ****             }
  86:../InternalTemperatureMonitor.c ****             }
  87:../InternalTemperatureMonitor.c ****             break;
  88:../InternalTemperatureMonitor.c ****     }
  89:../InternalTemperatureMonitor.c **** }
 132               	0,89,.LM2-.LFBB1
 133               	.LM2:
 134 001a 0F90      		pop __tmp_reg__
 135 001c 0F90      		pop __tmp_reg__
 136 001e CF91      		pop r28
 137 0020 DF91      		pop r29
 138 0022 0895      		ret
 139               	.L3:
 141               	.LM3:
 142 0024 80E0      		ldi r24,lo8(sampleTimer)
 143 0026 90E0      		ldi r25,hi8(sampleTimer)
 144 0028 0E94 0000 		call SystemTime_timeHasArrived
 145 002c 8823      		tst r24
 146 002e 01F0      		breq .L6
 148               	.LM4:
 149 0030 8AE0      		ldi r24,lo8(10)
 150 0032 90E0      		ldi r25,hi8(10)
 151 0034 60E0      		ldi r22,lo8(sampleTimer)
 152 0036 70E0      		ldi r23,hi8(sampleTimer)
 153 0038 0E94 0000 		call SystemTime_futureTime
 155               	.LM5:
 156 003c 81E0      		ldi r24,lo8(1)
 157 003e 8093 0000 		sts tmState,r24
 158 0042 00C0      		rjmp .L6
 159               	.L4:
 161               	.LM6:
 162 0044 88E0      		ldi r24,lo8(8)
 163 0046 0E94 0000 		call ADCManager_StartConversion
 164 004a 8823      		tst r24
 165 004c 01F0      		breq .L6
 167               	.LM7:
 168 004e 82E0      		ldi r24,lo8(2)
 169 0050 8093 0000 		sts tmState,r24
 171               	.LM8:
 172 0054 0F90      		pop __tmp_reg__
 173 0056 0F90      		pop __tmp_reg__
 174 0058 CF91      		pop r28
 175 005a DF91      		pop r29
 176 005c 0895      		ret
 177               	.L8:
 178               	.LBB7:
 180               	.LM9:
 181 005e CE01      		movw r24,r28
 182 0060 0196      		adiw r24,1
 183 0062 0E94 0000 		call ADCManager_ConversionIsComplete
 184 0066 8823      		tst r24
 185 0068 01F0      		breq .L6
 187               	.LM10:
 188 006a 8981      		ldd r24,Y+1
 189 006c 9A81      		ldd r25,Y+2
 190 006e 60E0      		ldi r22,lo8(temperatureHistory)
 191 0070 70E0      		ldi r23,hi8(temperatureHistory)
 192 0072 0E94 0000 		call DataHistory_insertValue
 194               	.LM11:
 195 0076 1092 0000 		sts tmState,__zero_reg__
 196 007a 00C0      		rjmp .L6
 197               	.LBE7:
 202               	.Lscope1:
 204               	.global	InternalTemperatureMonitor_currentTemperature
 206               	InternalTemperatureMonitor_currentTemperature:
 208               	.LM12:
 209               	.LFBB2:
 210 007c 0F93      		push r16
 211 007e 1F93      		push r17
 212 0080 DF93      		push r29
 213 0082 CF93      		push r28
 214 0084 00D0      		rcall .
 215 0086 00D0      		rcall .
 216 0088 00D0      		rcall .
 217 008a CDB7      		in r28,__SP_L__
 218 008c DEB7      		in r29,__SP_H__
 219               	/* prologue: function */
 220               	/* frame size = 6 */
 222               	.LM13:
 223 008e 1A82      		std Y+2,__zero_reg__
 224 0090 1982      		std Y+1,__zero_reg__
 226               	.LM14:
 227 0092 8091 0000 		lds r24,temperatureHistory+1
 228 0096 8A30      		cpi r24,lo8(10)
 229 0098 00F0      		brlo .L10
 230               	.LBB8:
 232               	.LM15:
 233 009a 80E0      		ldi r24,lo8(temperatureHistory)
 234 009c 90E0      		ldi r25,hi8(temperatureHistory)
 235 009e 6AE0      		ldi r22,lo8(10)
 236 00a0 AE01      		movw r20,r28
 237 00a2 4D5F      		subi r20,lo8(-(3))
 238 00a4 5F4F      		sbci r21,hi8(-(3))
 239 00a6 9E01      		movw r18,r28
 240 00a8 2B5F      		subi r18,lo8(-(5))
 241 00aa 3F4F      		sbci r19,hi8(-(5))
 242 00ac 8E01      		movw r16,r28
 243 00ae 0F5F      		subi r16,lo8(-(1))
 244 00b0 1F4F      		sbci r17,hi8(-(1))
 245 00b2 0E94 0000 		call DataHistory_getStatistics
 246               	.L10:
 247 00b6 6981      		ldd r22,Y+1
 248 00b8 7A81      		ldd r23,Y+2
 249 00ba 80E0      		ldi r24,lo8(0)
 250 00bc 90E0      		ldi r25,hi8(0)
 251 00be 6754      		subi r22,lo8(-(-327))
 252 00c0 7140      		sbci r23,hi8(-(-327))
 253 00c2 8040      		sbci r24,hlo8(-(-327))
 254 00c4 9040      		sbci r25,hhi8(-(-327))
 255 00c6 0E94 0000 		call __floatsisf
 256 00ca 2EE8      		ldi r18,lo8(0x4484fa8e)
 257 00cc 3AEF      		ldi r19,hi8(0x4484fa8e)
 258 00ce 44E8      		ldi r20,hlo8(0x4484fa8e)
 259 00d0 54E4      		ldi r21,hhi8(0x4484fa8e)
 260 00d2 0E94 0000 		call __mulsf3
 261 00d6 20E0      		ldi r18,lo8(0x447a0000)
 262 00d8 30E0      		ldi r19,hi8(0x447a0000)
 263 00da 4AE7      		ldi r20,hlo8(0x447a0000)
 264 00dc 54E4      		ldi r21,hhi8(0x447a0000)
 265 00de 0E94 0000 		call __divsf3
 266 00e2 0E94 0000 		call __fixsfsi
 267               	.LBE8:
 269               	.LM16:
 270 00e6 CB01      		movw r24,r22
 271               	/* epilogue start */
 272 00e8 2696      		adiw r28,6
 273 00ea 0FB6      		in __tmp_reg__,__SREG__
 274 00ec F894      		cli
 275 00ee DEBF      		out __SP_H__,r29
 276 00f0 0FBE      		out __SREG__,__tmp_reg__
 277 00f2 CDBF      		out __SP_L__,r28
 278 00f4 CF91      		pop r28
 279 00f6 DF91      		pop r29
 280 00f8 1F91      		pop r17
 281 00fa 0F91      		pop r16
 282 00fc 0895      		ret
 291               	.Lscope2:
 293               	.global	InternalTemperatureMonitor_Initialize
 295               	InternalTemperatureMonitor_Initialize:
 297               	.LM17:
 298               	.LFBB3:
 299               	/* prologue: function */
 300               	/* frame size = 0 */
 302               	.LM18:
 303 00fe 1092 0000 		sts tmState,__zero_reg__
 305               	.LM19:
 306 0102 82E0      		ldi r24,lo8(2)
 307 0104 90E0      		ldi r25,hi8(2)
 308 0106 60E0      		ldi r22,lo8(sampleTimer)
 309 0108 70E0      		ldi r23,hi8(sampleTimer)
 310 010a 0E94 0000 		call SystemTime_futureTime
 311               	.LBB9:
 312               	.LBB10:
 314               	.Ltext1:
   1:../DataHistory.h **** //
   2:../DataHistory.h **** //  Data History
   3:../DataHistory.h **** //
   4:../DataHistory.h **** //  The object defined here is used to retain the latest
   5:../DataHistory.h **** //  n data readings, and provide a min, max, and
   6:../DataHistory.h **** //  average value over the readings
   7:../DataHistory.h **** //
   8:../DataHistory.h **** #ifndef DATAHISTORY_H
   9:../DataHistory.h **** #define DATAHISTORY_H
  10:../DataHistory.h **** 
  11:../DataHistory.h **** #include <stdint.h>
  12:../DataHistory.h **** #include <stdbool.h>
  13:../DataHistory.h **** 
  14:../DataHistory.h **** typedef struct {
  15:../DataHistory.h ****     uint8_t tail;
  16:../DataHistory.h ****     uint8_t length;
  17:../DataHistory.h ****     uint8_t capacity;
  18:../DataHistory.h ****     uint16_t* dataBuffer;
  19:../DataHistory.h **** } DataHistory_t;
  20:../DataHistory.h **** 
  21:../DataHistory.h **** #define DataHistory_define(capacity, name) \
  22:../DataHistory.h ****     uint16_t name##_buf[capacity] = {0}; \
  23:../DataHistory.h ****     DataHistory_t name = {0, 0, capacity, name##_buf};
  24:../DataHistory.h **** 
  25:../DataHistory.h **** inline void DataHistory_clear (
  26:../DataHistory.h ****     DataHistory_t* dataHistory)
  27:../DataHistory.h **** {
  28:../DataHistory.h ****     dataHistory->tail = 0;
 315               	TemperatureMonitor.c",132,0,0,.Ltext2
 316               	.Ltext2:
  29:../DataHistory.h ****     dataHistory->length = 0;
 318               	.Ltext2:
 320 0112 1092 0000 	.LM22:
 321               		ldi r24,lo8(8)
 322               		ldi r22,lo8(3)
 323               		ldi r20,lo8(0)
 324               		call ADCManager_setupChannel
 325               	/* epilogue start */
 327 0116 88E0      	.LM23:
 328 0118 63E0      		ret
 330 011c 0E94 0000 	.Lscope3:
 331               	.global	temperatureHistory_buf
 332               	.global	temperatureHistory_buf
 333               		.section .bss
 336               	temperatureHistory_buf:
 337               		.skip 20,0
 338               	.global	temperatureHistory
 339               		.data
 342               	temperatureHistory:
 343 0000 0000 0000 		.byte	0
 343      0000 0000 
 343      0000 0000 
 343      0000 0000 
 343      0000 0000 
 344               		.byte	0
 345               		.byte	10
 346               		.word	temperatureHistory_buf
 347               		.lcomm tmState,1
 348               		.lcomm sampleTimer,4
 353               		.text
 355               	.Letext0:
 356               	.global __do_copy_data
 357               	.global __do_clear_bss
 358               	...
DEFINED SYMBOLS
                            *ABS*:00000000 InternalTemperatureMonitor.c
C:\Users\owner\AppData\Local\Temp/ccHcix4c.s:2      *ABS*:0000003f __SREG__
C:\Users\owner\AppData\Local\Temp/ccHcix4c.s:3      *ABS*:0000003e __SP_H__
C:\Users\owner\AppData\Local\Temp/ccHcix4c.s:4      *ABS*:0000003d __SP_L__
C:\Users\owner\AppData\Local\Temp/ccHcix4c.s:5      *ABS*:00000034 __CCP__
C:\Users\owner\AppData\Local\Temp/ccHcix4c.s:6      *ABS*:00000000 __tmp_reg__
C:\Users\owner\AppData\Local\Temp/ccHcix4c.s:7      *ABS*:00000001 __zero_reg__
C:\Users\owner\AppData\Local\Temp/ccHcix4c.s:110    .text:00000000 InternalTemperatureMonitor_task
                             .bss:00000014 tmState
C:\Users\owner\AppData\Local\Temp/ccHcix4c.s:353    .bss:00000015 sampleTimer
C:\Users\owner\AppData\Local\Temp/ccHcix4c.s:348    .data:00000000 temperatureHistory
C:\Users\owner\AppData\Local\Temp/ccHcix4c.s:206    .text:0000007c InternalTemperatureMonitor_currentTemperature
C:\Users\owner\AppData\Local\Temp/ccHcix4c.s:295    .text:000000fe InternalTemperatureMonitor_Initialize
C:\Users\owner\AppData\Local\Temp/ccHcix4c.s:342    .bss:00000000 temperatureHistory_buf

UNDEFINED SYMBOLS
SystemTime_timeHasArrived
SystemTime_futureTime
ADCManager_StartConversion
ADCManager_ConversionIsComplete
DataHistory_insertValue
DataHistory_getStatistics
__floatsisf
__mulsf3
__divsf3
__fixsfsi
ADCManager_setupChannel
__do_copy_data
__do_clear_bss
